/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;

vertices
(
    (0 0 0)		// vertex 0
    (0.118 0.118 0)	// vertex 1
    (-0.118 0.118 0)	// vertex 2
    (-0.118 -0.118 0)	// vertex 3
    (0.118 -0.118 0)	// vertex 4
    (0.707 0.707 0)	// vertex 5
    (-0.707 0.707 0)	// vertex 6
    (-0.707 -0.707 0)	// vertex 7
    (0.707 -0.707 0)	// vertex 8
    (0.118 0.118 50)	// vertex 9
    (-0.118 0.118 50)	// vertex 10
    (-0.118 -0.118 50)	// vertex 11
    (0.118 -0.118 50)	// vertex 12
    (0.707 0.707 50)	// vertex 13
    (-0.707 0.707 50)	// vertex 14
    (-0.707 -0.707 50)// vertex 15
    (0.707 -0.707 50)	// vertex 16
    (0 0 50)		// vertex 17
);

blocks
(
    hex (1 2 3 4 9 10 11 12) (10 10 500) simpleGrading (1 1 1)	// block 1
    hex (1 5 6 2 9 13 14 10) (10 10 500) simpleGrading (1 1 1)	// block 2
    hex (2 6 7 3 10 14 15 11) (10 10 500) simpleGrading (1 1 1)	// block 3
    hex (3 7 8 4 11 15 16 12) (10 10 500) simpleGrading (1 1 1)	// block 4
    hex (8 5 1 4 16 13 9 12) (10 10 500) simpleGrading (1 1 1)	// block 5
);

edges
(
    arc 5 6 (0 1 0)		// edge 1
    arc 6 7 (-1 0 0)		// edge 2
    arc 7 8 (0 -1 0)		// edge 3
    arc 8 5 (1 0 0)		// edge 4
    arc 1 2 (0 0.167 0)	// edge 5
    arc 2 3 (-0.167 0 0)	// edge 6
    arc 3 4 (0 -0.167 0)	// edge 7
    arc 4 1 (0.167 0 0)	// edge 8

    arc 13 14 (0 1 50)	// edge 9
    arc 14 15 (-1 0 50)	// edge 10
    arc 15 16 (0 -1 50)	// edge 11
    arc 16 13 (1 0 50)	// edge 12
    arc 9 10 (0 0.167 50)	// edge 13
    arc 10 11 (-0.167 0 50)	// edge 14
    arc 11 12 (0 -0.167 50)	// edge 15
    arc 12 9 (0.167 0 50)	// edge 16
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (1 2 3 4)
            (1 5 6 2)
            (2 6 7 3)
            (3 7 8 4)
            (4 8 5 1)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (9 10 11 12)
            (9 10 14 13)
            (10 11 15 14)
            (11 12 16 15)
            (12 9 13 16)
        );
    }
    wall
    {
        type wall;
        faces
        (
            (13 14 6 5)
            (14 15 7 6)
            (15 16 8 7)
            (16 13 5 8)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //