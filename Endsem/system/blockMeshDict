/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    ( -100 -100 0)
    (-17.678 -17.678 0)
    (17.678 -17.678 0)
    (100 -100 0)
    (100 100 0)
    (17.678 17.678 0)
    (-17.678 17.678 0)
    (-100 100 0)
    
    ( -100 -100 10)
    (-17.678 -17.678 10)
    (17.678 -17.678 10)
    (100 -100 10)
    (100 100 10)
    (17.678 17.678 10)
    (-17.678 17.678 10)
    (-100 100 10)
);

blocks
(
    hex (0 3 2 1 8 11 10 9) (50 50 1) simpleGrading (1 1 1)
    hex (2 3 4 5 10 11 12 13) (50 50 1) simpleGrading (1 1 1)
    hex (6 5 4 7 14 13 12 15) (50 50 1) simpleGrading (1 1 1)
    hex (0 1 6 7 8 9 14 15) (50 50 1) simpleGrading (1 1 1)
);

edges
(
    arc 1 2 (0 -25 0)	// edge 1
    arc 2 5 (25 0 0)	// edge 2
    arc 5 6 (0 25 0)	// edge 3
    arc 6 1 (-25 0 0)	// edge 4
    
    arc 9 10 (0 -25 10)	// edge 5
    arc 10 13 (25 0 10)	// edge 6
    arc 13 14 (0 25 10)	// edge 7
    arc 14 9 (-25 0 10)	// edge 8

);
boundary
(
    frontAndBack
    {
        type empty;
        faces
        (
            (0 1 2 3)
            (5 4 3 2)
            (4 5 6 7)
            (7 6 1 0)
            (8 11 10 9)
            (11 12 13 10)
            (15 14 13 12)
            (8 9 14 15)
        );
    }

    topAndBottom_wall
    {
        type wall;
        faces
        (
            (4 7 15 12)
            (0 3 11 8)
        );
    }

    hot_wall
    {
        type wall;
        faces
        (
            (0 8 15 7)
        );
    }

    cold_wall
    {
        type wall;
        faces
        (
            (3 4 12 11)
        );
    }
    
    inner_wall
    {
        type wall;
        faces
        (
            (1 9 10 2)
            (2 10 13 5)
            (6 5 13 14)
            (1 6 14 9)
        );
    }

);

mergePatchPairs
(
);
